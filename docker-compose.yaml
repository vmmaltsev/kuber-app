services:
  db:
    image: postgres:16-alpine
    container_name: demo-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migration:
    image: migrate/migrate:v4.17.1
    volumes:
      - ./postgresql/migrations:/migrations
    command:
      - -path
      - /migrations
      - -database
      - postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      - up
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  api-golang:
    build: ./api-golang
    container_name: demo-api-golang
    depends_on:
      migration:
        condition: service_completed_successfully
    environment:
      PORT: ${GO_API_PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "${GO_API_PORT}:${GO_API_PORT}"
    restart: unless-stopped

  api-node:
    build: ./api-node
    container_name: demo-api-node
    depends_on:
      migration:
        condition: service_completed_successfully
    environment:
      PORT: ${NODE_API_PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "${NODE_API_PORT}:${NODE_API_PORT}"
    restart: unless-stopped

  client:
    build: ./client-react
    container_name: demo-client
    ports:
      - "80:${REACT_CLIENT_PORT}"
    depends_on:
      - api-golang
      - api-node
    restart: unless-stopped

  load-generator:
    build: ./load-generator-python
    container_name: demo-load-generator
    depends_on:
      client:
        condition: service_started
    environment:
      BASE_URL: ${LOADGEN_BASE_URL}
      TARGETS: ${LOADGEN_TARGETS}
      DELAY_MS: ${LOADGEN_DELAY_MS}
    restart: unless-stopped

volumes:
  postgres_data:

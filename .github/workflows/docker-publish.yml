name: Build and Publish Docker Images

on:
  push:
    branches: [ main ]

permissions:
  contents: write  # ‚úÖ –ø–æ–∑–≤–æ–ª—è–µ—Ç GITHUB_TOKEN –ø—É—à–∏—Ç—å –∫–æ–º–º–∏—Ç—ã

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  IMAGE_PREFIX: ${{ secrets.DOCKER_HUB_USERNAME }}/demo-app

jobs:
  # üèÅ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: üóì Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: üî¢ Get short SHA
        id: sha
        run: echo "sha=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: üè∑ Set tag name
        id: tag
        run: echo "tag=${{ steps.date.outputs.date }}-${{ steps.sha.outputs.sha }}" >> $GITHUB_OUTPUT

  # üõ† Matrix-–±–∏–ª–¥ Docker-–æ–±—Ä–∞–∑–æ–≤
  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - api-golang
          - api-node
          - client-react
          - load-generator-python
          - postgresql
    name: üê≥ Build ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - name: üõ† Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: üöÄ Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest
            ${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:${{ needs.prepare.outputs.tag }}
          cache-from: type=registry,ref=${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest
          cache-to: type=inline

  # üßæ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ VERSION.md –ø–æ—Å–ª–µ –≤—Å–µ—Ö –±–∏–ª–¥–æ–≤
  manifest:
    name: üìÑ Generate Version Manifest
    runs-on: ubuntu-latest
    needs: [build, prepare]
    steps:
      - uses: actions/checkout@v4

      - name: üìù Generate VERSION.md
        run: |
          echo "# Deployment manifest - generated on $(date)" > VERSION.md
          echo "Tag: ${{ needs.prepare.outputs.tag }}" >> VERSION.md
          echo "Commit: ${{ github.sha }}" >> VERSION.md
          echo "Date: $(date)" >> VERSION.md
          echo "Images:" >> VERSION.md
          echo "- ${{ env.IMAGE_PREFIX }}-api-golang:${{ needs.prepare.outputs.tag }}" >> VERSION.md
          echo "- ${{ env.IMAGE_PREFIX }}-api-node:${{ needs.prepare.outputs.tag }}" >> VERSION.md
          echo "- ${{ env.IMAGE_PREFIX }}-client-react:${{ needs.prepare.outputs.tag }}" >> VERSION.md
          echo "- ${{ env.IMAGE_PREFIX }}-load-generator-python:${{ needs.prepare.outputs.tag }}" >> VERSION.md
          echo "- ${{ env.IMAGE_PREFIX }}-postgresql:${{ needs.prepare.outputs.tag }}" >> VERSION.md

      - name: ‚úÖ Commit VERSION.md
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update version manifest [skip ci]"
          file_pattern: VERSION.md
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          branch: main  # üîß —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ç–∫—É
        env:
          GIT_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
